/* Generated By:JJTree&JavaCC: Do not edit this line. CompiladorConstants.java */
package tree;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CompiladorConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MAIN = 9;
  /** RegularExpression Id. */
  int IF = 10;
  /** RegularExpression Id. */
  int ELSE = 11;
  /** RegularExpression Id. */
  int FOR = 12;
  /** RegularExpression Id. */
  int RETURN = 13;
  /** RegularExpression Id. */
  int INT = 14;
  /** RegularExpression Id. */
  int CHAR = 15;
  /** RegularExpression Id. */
  int FLOAT = 16;
  /** RegularExpression Id. */
  int DOUBLE = 17;
  /** RegularExpression Id. */
  int VOID = 18;
  /** RegularExpression Id. */
  int WHILE = 19;
  /** RegularExpression Id. */
  int AS = 20;
  /** RegularExpression Id. */
  int PLUS = 21;
  /** RegularExpression Id. */
  int MINUS = 22;
  /** RegularExpression Id. */
  int MULT = 23;
  /** RegularExpression Id. */
  int DIV = 24;
  /** RegularExpression Id. */
  int REM = 25;
  /** RegularExpression Id. */
  int GT = 26;
  /** RegularExpression Id. */
  int LT = 27;
  /** RegularExpression Id. */
  int EQ = 28;
  /** RegularExpression Id. */
  int LE = 29;
  /** RegularExpression Id. */
  int GE = 30;
  /** RegularExpression Id. */
  int NEQ = 31;
  /** RegularExpression Id. */
  int AND = 32;
  /** RegularExpression Id. */
  int OR = 33;
  /** RegularExpression Id. */
  int LPAREN = 34;
  /** RegularExpression Id. */
  int RPAREN = 35;
  /** RegularExpression Id. */
  int LBRACE = 36;
  /** RegularExpression Id. */
  int RBRACE = 37;
  /** RegularExpression Id. */
  int LBRACKET = 38;
  /** RegularExpression Id. */
  int RBRACKET = 39;
  /** RegularExpression Id. */
  int SEMICOLON = 40;
  /** RegularExpression Id. */
  int COMMA = 41;
  /** RegularExpression Id. */
  int DOT = 42;
  /** RegularExpression Id. */
  int int_constant = 43;
  /** RegularExpression Id. */
  int string_constant = 44;
  /** RegularExpression Id. */
  int null_constant = 45;
  /** RegularExpression Id. */
  int IDENT = 46;
  /** RegularExpression Id. */
  int LETTER = 47;
  /** RegularExpression Id. */
  int DIGIT = 48;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int PREPROCESSOR_OUTPUT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"#\"",
    "\"\\n\"",
    "\"main\"",
    "\"if\"",
    "\"else\"",
    "\"for\"",
    "\"return\"",
    "\"int\"",
    "\"char\"",
    "\"float\"",
    "\"double\"",
    "\"void\"",
    "\"while\"",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"&&\"",
    "\"||\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "<int_constant>",
    "<string_constant>",
    "\"null\"",
    "<IDENT>",
    "<LETTER>",
    "<DIGIT>",
  };

}
